# nonk8s
# 规范：https://istio.io/latest/docs/reference/config/networking/gateway/
# ingress网关根据下面定义的Host接收外部请求，再结合VirtualService实现流量转发（强依赖）
# ingress网关定义要对外暴露的端口&协议&主机名&证书相关
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  # 命名携带 ingress前缀，方便与egress网关策略进行区分
  name: ingress-go-multiroute
  namespace: istio-system # 建议将网关对象部署在istio-system命名空间中，以便可以通过istioctl管理它
spec:
  selector: # 关联ingress网关的pod（默认在所有命名空间中匹配，除非istiod中的 PILOT_SCOPE_GATEWAY_TO_NAMESPACE 变量设置true）
    app: istio-ingressgateway
  servers:
    - name: go-multiroute # 为这个server起个备注，可省略
      port: # 网关（本地Pod或公有云的LoadBalancer）对外监听的端口&协议
        name: http
        number: 8080 # 此端口号必须在 service：istio-ingressgateway 定义的Port端口映射中存在（http:80/8080,https:443/8443），且协议能够对应。
        protocol: HTTP # HTTP|HTTPS|GRPC|GRPC-WEB|HTTP2|MONGO|TCP|TLS
      # 允许VirtualService绑定的域名或集群服务名，"*"表示不限制或用作通配符如 "*.foo.com" "ns/*"
      # - 注意：这里定义host只是步骤一，还需要有一个VirtualService来匹配网关中的host来进行转发
      # - 若下面定义的host不能匹配到任何VS策略，则404处理
      hosts:
        # HTTP请求必须携带 "Host: 下面任何一个名称" 这个Header字段，否则网关返回404
        - "*.foobar.com"
    - name: go-multiroute-https
      port:
        name: https
        number: 8443
        protocol: HTTPS
      hosts:
        - "*.foobar.com"
      tls:
        # tls.mode=SIMPLE表示网关不会要求外部客户端提供证书，并且网关会进行TLS终止！即网关转发到集群内的流量是HTTP或原始TCP的，而不是TLS的
        # - ingress网关的tls.mode一般选择SIMPLE，即手动配置host证书（证书一般由权威机构签发，client才能信任）
        mode: SIMPLE
        credentialName: cert-foobar

    # 可以在同一个gateway中配置多个server；但若存在较多server，最好将它们分类到不同模板下进行管理。
    #- port:
    #    number: 2379
    #    name: mongo
    #    protocol: MONGO
    # hosts:
    #    - "*"