# nonk8s
# 规范：https://istio.io/latest/zh/docs/reference/config/networking/virtual-service/
# - 下面的示例远远没有列出所有选项，请参考上面的规范以获取更多信息。
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: go-multiroute
  namespace: default
spec:
  # 指定要应用此虚拟服务的目标地址列表，可以是（携带通配符）域名/ip/集群服务名
  # - 但凡匹配了任何一个列出的host地址的请求都会应用此虚拟服务，若请求不匹配下面的任何规则，则Envoy返回404
  hosts:
    - go-multiroute # 若service与规则不在同一命名空间，最好使用完整服务名：go-multiroute.default.svc.cluster.local

  # 下面的路由规则将按顺序匹配执行，每个HTTP请求最多匹配成功一个规则（一般最后的规则是无条件的默认规则）
  http: # 适用于http、http2以及gRPC在内的多种协议类型的流量
    # 第一组路由规则：将HTTP header中包含键值对 test-version: v2 的流量路由到子集 v2
    - match:
        - headers:
            test-version:
              exact: "v2" # 除了exact，还支持prefix、regex
      timeout: 1200ms
      route:
        - destination:
            host: go-multiroute # 此字段的值要么是集群中的service，要么已通过ServiceEntry定义，其他任何地址都将导致访问503
            subset: v2
    # 第二组路由规则：将所有流量路由到按权重分流到不同目标（即 DestinationRule 定义好的子集）
    # 此规则不含匹配条件，但配置了超时、重试和熔断机制
    - timeout: 2s
      #      retries:
      #        attempts: 3
      #        perTryTimeout: 2s
      route:
        - destination:
            # 目的服务名，建议使用 go-multiroute.default.svc.cluster.local 的FQDN完整形式
            # - 避免当策略与服务名不在同一命名空间时出现错误
            host: go-multiroute
            # 可选字段，用于匹配DestinationRule资源中的子集定义
            # - 若不指定subset，则流量会发送给 go-multiroute服务 的所有后端实例
            subset: v1
          weight: 80
        - destination:
            host: go-multiroute
            subset: v2
          weight: 20
#  tls: # 适用于HTTPS或TLS的流量
#  tcp: # 适用于非HTTP且非TLS的流量



# 扩展
# - 下面的规则将来自 sourceLabels 且路由是 /v1/get_user 的流量重定向为 /v2/get_user，然后发送到 flaskapp 的 v1 子集
#  http:
#    - match:
#      - sourceLabels:
#          app: sleep
#          version: v1
#        uri:
#          exact: "/v1/get_user"
#      redirect:
#        uri: /v2/get_user
